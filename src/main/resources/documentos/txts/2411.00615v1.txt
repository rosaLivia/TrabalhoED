
[Página 1]
arXiv:2411.00615v1 [cs.DB] 1 Nov 2024APRIORI GOAL ALGORITHM FOR CONSTRUCTING ASSOCIATION RULES FOR A DATABASE WITH A GIVEN CLASSIFICATION VLADIMIR BILLIG Abstract. An eﬃcient algorithm, Apriori Goal, is proposed for constructing association rules for a relational database with a given cla ssiﬁcation. The algorithm’s features are related to the speciﬁcs of the data base and the method of encoding its records. The algorithm proposes ﬁve criteri a that characterize the quality of the rules being constructed. Diﬀerent criter ia are also proposed for ﬁltering the sets used when constructing association ru les. The proposed method of encoding records allows for an eﬃcient implementa tion of the basic operation underlying the computation of rule characterist ics. The algorithm works with a relational database, where the co lumns can be of diﬀerent types, both continuous and discrete. Among the c olumns, a target discrete column is distinguished, which deﬁnes the classiﬁ cation of the records. This allows the original database to be divided into nsubsets according to the number of categories of the target parameter. Aclassical example ofsuch databases ismedical databases, where the target parameter is the diagnosis established by doctors. A preprocessor, which is an important part of the algorithm, converts the properties of the objects represented by the columns of the o riginal database into binary properties and encodes each record as a single in teger. In addition to saving memory, the proposed format allows the complete pr eservation of information about the binary properties representing the o riginal record. More importantly, the computationally intensive operations on records, required for calculating rule characteristics, are performed almost in stantly in this format using a pair of logical operations on integers. 1.Introduction Associationrulesareoneoftheimportanttoolsusedinknowledgedis coveryfrom databases. The advantage of rules is that the extracted knowled ge is presented in the form of an implication: (1) X⇒Y whereXis the antecedent of the rule, and Yis the consequent. This form is easily understood by experts for whom the knowledge is extracte d. The rule is interpreted as: ”if X, thenY,” or ”XimpliesY,” or ”the occurrence of Xis associated with the occurrence of Y.” Naturally, for the expert, a rule is valuable only when they know that the rule holds with a high degree of probabilit y. Association rules extracted from databases became widespread d ue to the ap- pearance of the Apriori algorithm, proposed in the works of Rakes h Agrawal and his co-authors [1, 2, 3], with the ﬁrst of these works appearing as e arly as 1993. 1

[Página 2]
2 VLADIMIR BILLIG IntheApriorialgorithm,aﬁnitesetofliterals D={d1,d2,...,d m}isconsidered, along with a database db={t1,t2,...,tn}consisting of records—transactions,each of which is a subset of literals: tk⊆D. In an association rule (1), extracted from the database, XandYare non-empty, non-overlapping subsets of literals: (2) X⊆D, Y⊆D, X∩Y=∅ Foreachruleconstructedbythe Apriorialgorithm,twocharacte risticsofthe rule are computed from the database, determining its value—frequenc y and conﬁdence. Frequency is deﬁned as the ratio of the number of transactions co ntaining both the antecedent and consequent of the rule to the total number of tr ansactions in the database. Conﬁdenceisdeﬁnedastheratioofthenumberoftran sactionscontaining both the antecedent and consequent to the number of transact ions containing the antecedent. The Apriori algorithm eﬃciently constructs all assoc iation rules whose frequency and conﬁdence exceed the minimally speciﬁed values. The basic idea of the Apriori algorithm is based on the anti-monotonic ity prop- ertyoffrequency. Ifaset Z⊆Disnotfrequent,thenanyofitssupersets—extensions ofZ—are also not frequent. As a consequence, in the ﬁrst step, the a lgorithm con- structs all frequent subsets of D, starting from the frequent singleton subsets, and then extends them step by step. In the second step, these subs ets are used to construct rules that meet the speciﬁed conﬁdence. Subsequent numerous variations of algorithms for constructing a ssociation rules, in one way or another, use the basic idea of the Apriori algorithm. IntheworkofF.Bodon[4], asortingtreestructurewasproposed forrepresenting transactions, demonstrating its eﬃciency in compressing the data base. An eﬃcient implementation of the algorithm was proposed in the works of Chris- tian Borgelt [5, 6, 7]. In this implementation, the database is compres sed into a transaction tree. In Borgelt’s review article [8], one can ﬁnd descrip tions of various algorithms for constructing frequent itemsets. In the fundamen tal book by Han, Kamber, and Pei [9], which is dedicated to the concepts and methods of knowledge discovery from databases, various algorithms and approaches to constructing asso- ciation rules are discussed in detail within the broader context of th e general Data Mining approach. The ﬁrst work on constructing multi-level association rules was the work by Han and Fu [10]. In [11], the eﬃciency of constructing multi-level rules was analyzed. The number of works dedicated to association rules is increasing eve ry year. I will mention just a few works related to the topic of this article. In[12], methodsforconstructingassociationrulesarediscussedw hentheoriginal data can be of various types. The works [13, 14] consider the cons truction of rare association rules, which may be of greater interest to experts tha n frequent rules, which are often well-known to experts. Several works are devote d to constructing rules for speciﬁc applied domains. The works [15, 16] consider the co nstruction of association rules for medical databases. In[17], analgorithmwasproposedbasedoncompressingdatabaser ecords,where arecordis representedby asingle integerwhile preservingall the inf ormation about the set of literals in the record. In [18], an important special case wa s considered wherethedatabasehasatargetcolumn, simplifying the ruleconstr uctionalgorithm by allowing the antecedent to be built with a ﬁxed consequent.

[Página 3]
APRIORI GOAL ALGORITHM FOR CONSTRUCTING ASSOCIATION RULES FOR A DAT ABASE WITH A GIVEN CLASSIFICATION This article presents the Apriori Goal algorithm, which generalizes the ideas presented in [17, 18]. 2.Database and Preprocessor Let’s consider the features of the proposed algorithm. 2.1.Database Encoding. The Apriori Goal algorithm is oriented toward a gen- eral database schema. The database is considered as a descriptio n of a set of objects deﬁned by their properties. The set Dis the set of properties: D= {P1,P2,...,P m}. The database represents a typical relational rectangular table withNrows corresponding to the number of records and Mcolumns correspond- ing to the number of object properties. A typical interpretation o f a database is a medical database, where the objects are patients, and the prop erties include age, gender, height, weight, and the results of various tests. At the preliminary stage of working with the database, each proper ty is trans- formed into a set of binary properties, which can be considered as lit erals in the classical algorithm. The Apriori Goal algorithm uses an encoding of literals that allows the trans- formation of a record from the original database into an integer. I n the encoding, a binary property possessed by an object, with number kin the enumeration of binary properties, is mapped to the number 2k. The number representing a record is the sum of the codes of the binary properties of the object. The obviousgoalofsuch encodingis to compressthe record, repr esentingit as an integerwhilepreservingallinformationabouttherecord,allowingon etodetermine, from the binary representation of the number, which properties a re possessed by the object described by the record. The main goal of this encoding is that it allows the computationally inten sive set operations characteristic of the Apriori algorithm to be replaced w ith operations on integers, which are performed almost instantly. 2.2.Database with a Target Parameter. In general, searching for associa- tion rules, even those that appear with high frequency and conﬁde nce, between all combinations of literals does not have much practical signiﬁcance. M ore often, the databasecontains a target parameter, and associationrules are constructed to solve a classiﬁcation problem – determining which factors inﬂuence the ach ievement of a certain goal. The target parameter is a discrete parameter with a ﬁxed number o f values, each deﬁning a speciﬁc goal. The presence of a target parameter a llows for the introduction of classiﬁcation into the database. By sorting the rec ords according to the value of the target parameter, the database is divided into s ubsets: (3) db={db1,db2,...,db p} The records in each subset have the same value for the target par ameter. In a medical database, the target might be a diagnosis. Association rules can help identify combinations of factors that are informative for esta blishing the cor- responding diagnosis. In a banking database containing information about bank clients, association rules allow for classifying clients and oﬀering them appropriate banking products.

[Página 4]
4 VLADIMIR BILLIG 2.3.Preprocessor. The preprocessor plays an important role. It: •Readstheoriginaldatabase,whichcanbepresentedinvariousfor mats—Excel ﬁles, text ﬁles in CSV format, and other formats. •Performs preliminary data processing—places the target column ﬁr st and sorts the database records by the values of the target column. •Can process ”raw” data. •Converts the database to a special format, which we call the property scale format. Let’s considerthe details ofconvertingthe databaseto the prope rtyscaleformat. LetTbe the type of a column in the database. Type Tcan be either discrete or continuous. If Tis discrete, it is assumed that the number of distinct values kis limited: k≤kmax. Ifk > kmax, the type is considered continuous. A continuous data type is converted to a limited discrete data type w ith a ﬁxed number of values. The conversion is based on introducing a classiﬁca tion for the continuous type—the range of possible values of the continuous ty pe is divided into kclasses. For example, a continuous type representing temperatu re can be divided into three classes: below normal, normal, and above normal. A 100-p oint grading scale can thus be reduced to a ﬁve-point scale. Next, the data is reduced to binary object properties. Each colum n in the database, converted to a limited discrete type, is treated as kbinary-type columns. The new columns automatically receive names formed from the type n ame and the class number to which the value of the limited discrete type belongs. Thus, for a type Trepresenting temperature with three classes of values, a column with the name T0deﬁnes the corresponding binary property of the object. The record ﬁeld in this column will have the value 1 if the temperature v alue for this object is below normal. Otherwise, the ﬁeld value will be 0. In each record, only one of the binary columns generated by type Twill have a value of 1; the rest of the columns will have a value of 0. LetPbe the enumeration of all binary properties of the object: (4) P={P1,P2,...,P m} Here,mis the number of generated binary columns. Then, the database re cord is deﬁned by the number N, calculated by the formula: (5) N=m/summationdisplay j=12j−1 Summation is performed over those values of jfor which the property Pjin the record equals 1. The number N, being the sum of powers of two, lies within the range: (6) 0 < N <2m With this method of forming the number N, the binary representation of this number will have ones exactly in the positions where the correspond ing properties are true. The record, deﬁned by the number N, fully retains the information about the properties possessed by the object represented by the record .

[Página 5]
APRIORI GOAL ALGORITHM FOR CONSTRUCTING ASSOCIATION RULES FOR A DAT ABASE WITH A GIVEN CLASSIFICATION One limitation that hinders the use of this format is the fact that the numberN canbelarge. Forexample, with m= 100,representingthenumberwillrequiremore than 30 digits, which exceeds the standard representation of inte gers in program- ming languages. However, many programming languages provide way s to handle this issue easily. For example, in Python, there are no restrictions o n the range of integer representation. In our implementation of the association r ule construction algorithm, written in the C# programming language, we use the BigInt eger library type, which eﬃciently implements arbitrary-precision arithmetic. In order for the preprocessor to convert the original database to the property scaleformat,itrequiresadditionalinformation. Thepreprocesso rreceivestwoinput ﬁles: •Thedbﬁle, which contains the original database. •Thedbdﬁle, which contains the description of the database. This ﬁle is essentially a database where the columns of the original database are treated as the data. The number of rows is determined by the numb er of columns in the original database. Each row contains 5 ﬁelds that des cribe a column of the database. These characteristics specify: (1)The column type , which can take values: target (for the ﬁrst column), continuous, or discrete for the other columns. (2)A short name , used asthe type namewhen constructingassociationrules. (3)The number of classes . For the target column and columns with a lim- ited discrete type, this is the number ofvalues of the type. For a co ntinuous type column, this is the number of classes when converting the cont inuous type to a limited discrete type. (4)A list of values . For the target column, the sizes of each subset of the database are speciﬁed. For the discrete type, the discrete value s are listed. For the continuous type, the intervals of the continuous range ar e speciﬁed for dividing it into the required number of classes. (5)A full name , a descriptive name used when explaining the meaning of the constructed rules. The information provided in the dbdﬁle is suﬃcient for the preprocessor to convert each record of the original database into an integer N, which deﬁnes the property scale of that record. The preprocessordoes not perf orm any explicit inter- mediatetransformationsofcontinuoustypes tolimited discretety pes orconversions of discrete types to sets of binary types. Realdatabasesusuallycontain”rawdata.”Thevalueofacertainﬁe ldinarecord may be missing or may not correspond to the required data type. Th e preprocessor easily handles ”raw” data. In all situations typical for raw data, it is assumed that the value for that ﬁeld in the given record is absent. For the as sociation rule construction algorithm, it is not required that all records have a ﬁx ed number of ﬁelds. 3.Association Rules and Their Characteristics 3.1.Association Rules. In the Apriori Goal algorithm, associationrules take the form:

[Página 6]
6 VLADIMIR BILLIG (7) X⇒Goalk The goal of the rule is ﬁxed, and the algorithm searches for the ant ecedentX—a set of input parameters—that is associated with the given goal. There are many variations of the sets X. How can we ﬁnd the ”good” sets that provide rules containing knowledge hidden in the original database? T he quality of a rule is determined by characteristics that can be computed for a g iven association rule. 3.1.1.Criteria for Rule Quality. In the classical Apriori algorithm, the quality of a rule is characterized by two criteria calculated from the database— rule frequency and conﬁdence. In the Apriori Goal algorithm, the quality of a rule is characterized by ﬁve cri- teria. Two of them— fgandfall—characterize the rule’s frequency. The ﬁrst repre- sents the frequency of the occurrence of the combined set X∪Goalkin the subset dbk, associated with the goal Goal k, while the second represents the frequency relative to the entire database. Two other criteria—conﬁdence and correlation—characterize the rule’s conﬁ- dence from diﬀerent perspectives. Based on these four criteria, a ﬁfth generalized criterion, quality, is constructed. This quality is deﬁned as a weighted sum of the four criteria. ThebasicoperationintheApriori Goalalgorithmistheoperationthatcalculates the support of the set Xacross the entire database or its subsets, deﬁned as the number of records containing the set X: (8) Support( X,db) =|{Zk:X⊆Zk;Zk∈db}| In equation (8), Zkrepresents the records of the analyzed database. Essentially, the basic operation requires the ability to compute whether the rec ordZk, repre- sentinga setofbinarypropertiesofan object, containsasubset ofbinaryproperties X. All rule characteristics are computed using the basic operation: (9)fg=Support( X,dbk) nkandfall=Support( X,dbk) N=fg·/parenleftBignk N/parenrightBig The frequency characteristics fall within the following ranges: (10) 0 ≤fg≤1; 0≤fall≤nk N Note that both characteristics use the same basic operation, as t he combined set X∪Goalkonly appears in the records of the subset dbk, associated with the given goal. Both characteristics are of interest to the experts for whom the association rules areconstructed. Ina medicalcontext, the characteristic fgrepresentsthe frequency of the set of properties Xamong patients with the same diagnosis Goal k, while the frequency fallindicates how often the set Xappears among all patients. A third important characteristic of an association rule is the rule’s co nﬁdence, deﬁned as the ratio of the number of records containing the set Xin the subset of

[Página 7]
APRIORI GOAL ALGORITHM FOR CONSTRUCTING ASSOCIATION RULES FOR A DAT ABASE WITH A GIVEN CLASSIFICATION the database associated with the goal Goal k, to the number of records containing this set in the entire database: (11) conﬁdence( X⇒Goalk) =Support( X,dbk) Support( X,db) The conﬁdence criterion falls within the range: (12) 0 ≤conﬁdence ≤1 The upper bound is reached when the set Xoccurs only in the records of the database subset associated with the given goal. Rules with high conﬁ dence, even with low frequency, may be of interest to experts, indicating the inf ormativeness of the setX. Another important criterion, called lift, also characterizes the conﬁdence of a rule. It is basedon aprobabilisticinterpretationofproperties. The set ofproperties Xis considered as a multidimensional random variable that appears with some probability. The lift criterion is deﬁned as the ratio of the joint proba bility of the antecedent and the consequent of the rule to the product of the probabilities of the antecedent and the probability of the consequent: (13) lift =P(X,Goalk) P(X)·P(Goalk)=P(X)·P(Goalk/X) P(X)·P(Goalk)=P(Goalk/X) P(Goalk) Considering the properties of the joint probability of two events, t he lift crite- rion is expressed as the ratio of the conditional probability of the go al given the antecedent Xto the overall probability of the goal. Switching from probabilities to frequencies, we get: (14) P(X,Goalk) =Support( X,dbk) N (15) P(X) =Support( X,db) N (16) P(Goalk) =nk N It is easy to see that the lift criterion is deﬁned by the following formu la: (17) lift = conﬁdence ·N nk Interestingly, the two criteria characterizing frequency and the two criteria char- acterizing rule conﬁdence are related by the same linear dependenc e. Despitetheexistinglineardependencebetweenthepairsofcriteria ,eachcriterion in the pair provides useful information to experts, oﬀering diﬀeren t interpretive content. The lift criterion can be interpreted as the correlation between the antecedent of the rule and its consequent. The values of the lift criterion fall within the following range:

[Página 8]
8 VLADIMIR BILLIG (18) 0 ≤lift≤N nk Let’s consider three critical points of the lift criterion: •lift = 1. Thissituationoccurswhentheconditionalprobability P(Goalk/X) coincides with the probability P(Goalk), which means independence of the events and the absence of any correlation between the antecede nt and the consequent. The correlation coeﬃcient in this case is zero. •lift = 0 . This means that the probability of the goal Goal kis zero when the antecedent Xappears. The correlation is negative in this case. From the expert’s point of view, this means that the occurrence of Xnegates the possibility of the goal Goal k. The correlation coeﬃcient in this case is -1. •lift = 1/P(Goal k). The maximum value of the lift criterion is reached when the conditional probability of the goal is 1, given the occurren ce of X. The correlation between the antecedent and the consequent in t his case is positive with a coeﬃcient of 1. Experts ﬁnd the correlation between the antecedent and the con sequent of the rule more understandable than conditional probabilities. Therefor e, as the fourth characteristic of an association rule, we introduce the correlation criterion, which is calculated as a function of the lift criterion. The simplest way to deﬁ ne this function, using the critical points, is as a piecewise linear function as follows: correlation = lift −1,if 0≤lift≤1 (19) correlation =lift−1 maxlift−1,if 1≤lift≤maxlift The values of the correlation criterion fall within the range: (20) −1≤correlation ≤1 The value ofmaxlift, equalto 1 /P(Goalk), is calculatedby the followingformula: (21) maxlift =N nk We introduce the ﬁfth characteristic of a rule— quality, which is a generalized criterion calculated as follows: (22) quality = p1·fall+p2·fg+p3·conﬁdence+ p4·correlation The weights of the characteristics are adjusted by experts. By d efault, the weights are set to 1. Introducing the correlation criterion allows for the classiﬁcation of the input parameters and their combinations that form the antecedent of t he rules for each goal Goal k. In the simplest case, the antecedents of rules can be classiﬁed int o one of three classes: uncorrelated, positively correlated, and ne gatively correlated. Uncorrelated antecedents are of no interest to experts. They a re primarily inter- ested in positively correlated antecedents with a high degree of cor relation between the antecedent and the consequent. Negatively correlated ante cedents may also

[Página 9]
APRIORI GOAL ALGORITHM FOR CONSTRUCTING ASSOCIATION RULES FOR A DAT ABASE WITH A GIVEN CLASSIFICATION be of interest, allowing the exclusion of a goal when the correspond ing antecedent appears. 3.1.2.Behavior of Criteria when Expanding the Antecedent of a Rule .The con- struction of association rules begins with the construction of rules with a single antecedent. Then, a step-by-step process follows, increasing t he length of the rule’s antecedent. What happens to the rule’s characteristics when the antecedent is expanded? LetX⇒GoalkandY⇒Goalkbe two rules with antecedents XandYwith known characteristics. What will be the characteristics of the exp anded rule X∪ Y⇒Goalk? In [18], it is shown that the frequency of the expanded rule fg(X,Y) can only decrease relative to the frequencies of the original rules and lies wit hin the range: (23) max(0 ,fg(X)+fg(Y)−1)≤fg(X,Y)≤min(fg(X),fg(Y)) A decrease in the frequency of the rule negatively aﬀects the qualit y of the rule, butthismaybecompensatedbyanincreaseintherule’sconﬁdence. Theconﬁdence of the expanded rule can either decrease or increase. We will demon strate under what conditions the conﬁdence of the expanded rule increases by c onducting a probabilistic analysis of the situation. We will prove the validity of the following statement: Expanding a positively correlated antecedent of a rule with a positively correlated variable leads to an increase in the conﬁdence of the expande d rule and, accordingly, to an increase in the correlation between the antecedent and the consequent of the rule. According to the deﬁnition in (11), the conﬁdence of a rule D(X) is given as follows: (24) D(X) =P(X)·n P(X)·n+Q(X)·(N−n)=a a+b Here: •P(X) is considered the probability of Xappearing in the records of the subset of the database associated with the goal Goal k, •nis the size of this subset, •Q(X) is considered the probability of Xappearing in the records of the database not associated with the goal Goal k, •Nis the size of the database. We compute the diﬀerence: (25) D(X,Y)−D(X) =P(X)·P(Y)·n P(X)·P(Y)·n+Q(X)·Q(Y)·(N−n)−P(X)·n P(X)·n+Q(X)·(N−n) Performing transformations, we get: (26) D(X,Y)−D(X) =c1·(P(Y)−Q(Y)) Similarly:

[Página 10]
10 VLADIMIR BILLIG (27) D(X,Y)−D(Y) =c2·(P(X)−Q(X)) The conﬁdence of the expanded rule is greater than the conﬁdenc es of the orig- inal rules if the probability of XandYappearing in the subset of the database associated with the goal Goal kis higher than the probabilities of these antecedents appearing in the records associated with other goals. If the antec edentsXand Yare positively correlated with the goal Goal k, these conditions hold, because a positively correlated antecedent for the goal Goal kwill be uncorrelated or nega- tively correlated with other goals. Consequently, the diﬀerences in probabilities in equations (25) and (26) will be positive, proving our statement. 3.2.Filtering Criteria. Toreducethenumberofcombinationswhenconstructing rules, the Apriori Goal algorithm allows for various criteria to be set. The frequencycriterionfollowsthe classicalApriorialgorithm. For eachgoal,the process begins by constructing a set of single antecedents whose frequency is higher than a speciﬁed threshold. Input parameters that do not pass th e threshold are considered non-informative and do not participate in the further r ule construction process. When expanding the antecedent, any subset of the ant ecedent must exceed the frequencythreshold; otherwise, the antecedentis rejecte d. The advantageofthe frequency criterion is that, due to the anti-monotonicity of frequ ency, all rejected antecedents prevent the construction of rules with the required frequency. Antecedents that pass the frequency threshold become candida tes for rule con- struction. However, passing the frequency threshold alone is not suﬃcient. Rule conﬁdence is a more important criterion than frequency. Therefo re, a correspond- ing rule for the candidate is constructed only when the rule passes a n additional ﬁlter—the conﬁdence threshold. Double ﬁltering allows the constru ction of all rules that pass the thresholds for both frequency and conﬁdence. The drawback of this approach is that preliminary ﬁltering based on f requency does not allow the construction of rare rules with high conﬁdence. F or example, with a frequency threshold of 0.5 and a conﬁdence threshold of 0.8, a rule with a frequency of 0.51 and conﬁdence of 0.82 will be constructed, but a potentially more important rule for experts with a frequency of 0.48 and conﬁdence of 0.98 will be rejected. The correlationcriterion constructs, for each goal, a set of input parameters that pass the correlation threshold and belong to the class of positive co rrelation. Input parameters with zero or negative correlation do not participate in t he further rule constructionprocessforthat goal. When expandingan antecede nt with a positively correlated parameter, any subset of the antecedent must also b elong to the class of positive correlation; otherwise, the antecedent is rejected. Ant ecedents that pass ﬁltering and belong to the class of positive correlation form the corr esponding rule. The constructed rules allow for the discovery of rare rules with high correlation between the antecedent and the consequent of the rule. The generalized quality criterion quality can also be used for ﬁltering, and its advantageisthat it takesintoaccountcharacteristicsthat deﬁn e boththe frequency and the conﬁdence of the rule. Regardless of the ﬁltering criterion used in the rule construction pr ocess, the values of all ﬁve criteria are calculated for each rule.

[Página 11]
APRIORI GOAL ALGORITHM FOR CONSTRUCTING ASSOCIATION RULES FOR A DAT ABASE WITH A GIVEN CLASSIFICATION 4.Data Structures and Basic Ideas of the Algorithm 4.1.Data Structures. Four basic structures, representing arraysof lists, are used in rule construction: •Candidates – candidates for constructing the antecedent of a rule. This set includes the input parameters that passed the threshold deﬁn ed by one of the three proposed ﬁltering criteria. •Current – the current set of antecedents of length kthat have passed ﬁltering and are used for rule construction. When k= 1, this set coincides with the set of Candidates. •NextCurrent – the expandable set of antecedents of length k+ 1, con- structed based on the sets Current and Candidates. •Rules– the set of all constructed rules. In all structures, the list representing the k-th element of the array includes the rules associated with the k-th goal. 4.2.Algorithm. Basic Idea of Construction. The basic idea of the rule con- struction algorithm is simple and intuitive. In the ﬁrst step, the set o f Candidates is constructed. This set becomes the initial value of the Current se t, allowing for the construction of rules with antecedents of length 1. Then, in a lo op, the an- tecedent of the rule is extended by one. Based on the set Current , containing the antecedentsoflength k, andthe setCandidates, the setNextCurrentis constructed. The newly constructed rules are added to the Rules structure. Ne xtCurrent is then transferred to Current and cleared for ﬁlling in the next iteration o f the loop. The loop always terminates because the length of the antecedent is limite d and cannot exceed the number of input parameters in the original database. I n practice, the loop terminates earlier, as soon as it is found that no new rules are be ing created at the current step. 4.3.Eﬃciency. The goal of the Apriori Goal algorithm was to provide experts with a convenient tool for searching and analyzing association rules , while also oﬀering suﬃcient eﬃciency. The main factor ensuring the eﬃciency of the algorithm is the format for encod- ing binary properties. Database records, along with rule antecede nts representing sets of binary properties, are encoded as integers. This encoding format allows heavy set operations to be replaced by bitwise operations on intege rs, which are executed almost instantaneously in a few machine instructions. The check for the condition X⊆Zis reduced to the computation of the logical expression: X&Z==X where & is the bitwise conjunction on integers. Adding a set Yto a set Xis implemented by the addition of numbers, and removal is performed b y subtraction. The most complex operation, which allows for constructing all subse ts of size k from a set Xof sizek+1, is also resolved simply and eﬃciently. Another important factor inﬂuencing eﬃciency is the presenceof a targetparam- eter, which allows the database to be divided into subsets. This make s it possible to ﬁx the goal and search only for the antecedent of the rule asso ciated with the goal. To calculate the frequency characteristics of a rule, it is suﬃc ient to review only the subset of the database associated with the speciﬁc goal.

[Página 12]
12 VLADIMIR BILLIG The process of searching for rules for each goal can be parallelized . Other techniques are also applied to reduce computation time. The le ngth of the rule’s antecedent can be limited. An upper threshold for the con ﬁdence of a rule can be set, after which the rule is no longer expanded. As experiments show, the algorithm has linear complexity O(N) in relation to the size of the database. The linearity coeﬃcient is slightly below one. The table below (Table 1) shows the time required to search for rules in databa ses ranging in size from 1,500 to 1.5 million records. Number of Records Time to Build Rules (seconds) 1581 0.33 15810 1.62 158100 9.15 1581000 85.26 Table 1. Time to Build Rules Depending on Database Size Thedatainthetableisforadatabaseinwhichthetargetparameter containstwo classes, with 120 input parameters and 610 rules constructed. Th e computations were performed on a standard Dell laptop. The runtime depends not only on the size ofthe databasebut alsoon the number of rules being constructed, which can be controlled by adjusting th e threshold in the ﬁltering criterion. Table 2 shows the time to search for rules for a database containing 158,100 records. Number of Rules Built Time to Build Rules (seconds) 44 1.78 172 2.83 610 8.60 1766 23.68 Table 2. Time to Build Rules Depending on the Number of Rules C on- structed This dependency is also linear, with a coeﬃcient close to one. 5.Implementation An implementation of the algorithm was created in the C# programming lan- guage. If the number of binary properties is less than 60, a lightweig ht version is used, where the type of number representing database records and rule antecedents is the standard ulongtype. For a larger number of properties, the library type BigInteger is used. The algorithm has been successfully applied in joint research with med ical pro- fessionals for analyzing real medical databases. 6.Conclusion A new eﬃcient algorithm for constructing association rules for the im portant special case of a database with classiﬁcation deﬁned by a target pa rameter is pro- posed. A distinctive feature of the algorithm is the method of encod ing database records, which ensures both database compression and eﬃcient im plementation of operations performed when calculating the characteristicsof ass ociation rules. Five

[Página 13]
APRIORI GOAL ALGORITHM FOR CONSTRUCTING ASSOCIATION RULES FOR A DAT ABASE WITH A GIVEN CLASSIFICATION criteriacharacterizingthe quality of the constructed rules arepr oposed. It has been experimentally shown that the algorithm has linear complexity with res pect to the size of the database. The developed implementation of the algorithm has been successfully used in the analysis of real databases. References [1] R. Agrawal, T. Imielinski, A. Swami. Mining association rules between sets of items in large databases . In Proc. of the ACM SIGMOD Conference on Management of Data, 1993. [2] Rakesh Agrawal, Ramakrishnan Srikant. Fast algorithms for mining association rules in large databases . Proceedings of the 20th International Conference on Very L arge Data Bases, VLDB 1994. [3] R. Agrawal, R. Srikant. Mining sequential patterns . Proc. 11th Int. Conf. Data Engineering, IEEE Press, 6–10 1995. [4] F. Bodon. Fast Apriori Implementation , Proceedings of the IEEE ICDM Workshop on Fre- quent Itemset Mining Implementations, 2003. [5] Christian Borgelt, Rudolf Kruse. Induction of Association Rules: Apriori Implementation . 15th Conference on Computational Statistics (Compstat 200 2, Berlin, Germany), 395-400. Physica Verlag, Heidelberg, Germany 2002. [6] Christian Borgelt. Eﬃcient Implementations of Apriori and Eclat , Workshop of Frequent Itemset Mining Implementations, FIMI 2003, Melbourne, FL, USA. [7] Christian Borgelt. Recursion Pruning for the Apriori Algorithm , 2nd Workshop of Frequent Itemset Mining Implementations, FIMI 2004, Brighton, UK. [8] Christian Borgelt. Frequent Item Set Mining , Wiley Interdisciplinary Reviews: Data Mining and Knowledge Discovery 2(6):437-456, J. Wiley & Sons, Chic hester, United Kingdom 2012. [9] Jiawei Han, Micheline Kamber, Jian Pei. Data Mining. Concepts and Techniques , Elsevier, 2012. [10] J. Han, Y. Fu. Mining Multiple-Level Association Rules in Large Database s, IEEE Transac- tions on Knowledge & Data Engineering, 1999, pp. 1-12. [11] Arpna Shrivastava, R. C. Jain. Performance Analysis of Modiﬁed Algorithm for Finding Multilevel Association Rules . Computer Science & Engineering: An International Journal (CSEIJ), Vol. 3, No. 4, August 2013. [12] Minakshi Kaushik et al. A Systematic Assessment of Numerical Association Rule Mini ng Methods , SN Computer Science 2(5), September 2021. [13] Federico Antonello et al. A novel association rule mining method for the identiﬁcatio n of rare functional dependencies in Complex Technical Infrast ructures from alarm data , Expert System with Applications, January 2021. [14] A. Borah, B. Nath. Rare association rule mining from incremental databases , Pattern Anal- ysis and Applications, 23, February 2020. [15] V.Billiget al. Building association rules in the task of medical diagnosti cs, Program Products and Systems, 2, 2016. [16] N. Piran, M. Farhadian. Diabetic foot ulcers risk prediction in patients with type 2 diabetes using classiﬁer based on association rule mining , PubMed, Scientiﬁc Reports volume 14, January 2024. [17] V. Billig. Eﬀective algorithm for constructing association rules , Program Products and Sys- tems, 2, 2017. [18] V. Billig. Building association rules for a database with a target para meter, Vestnik TvGU, Applied Mathematics, 1, 2024. Tver State Technical University, Tver, Russia Email address :billig.vladimir@gmail.com