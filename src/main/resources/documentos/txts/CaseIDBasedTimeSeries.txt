
[Página 1]
Case ID detection based on time series data - the mining use case Edyta Brzychczy , Tomasz Pełech -Pilichowski, Ziemowit Dworakowski AGH University of Krakow al. A. Mickiewicza 30, 30-059 Krakow, Poland {brzych3,tomek,zdw}@agh.edu.pl Abstract. Process mining gains increasing popularity in business process analysis, also in heavy industry. It requires a specific data format called an event log, with the basic structure including a case identifier (case ID), activity (event) name, and timestamp. I n the case of industrial processes, data is very often provided by a monitoring system as time series of low level sensor readings. This data cannot be directly used for process mining since there is no explicit marking of activities in the event log, and sometimes, case ID is not provided. We propose a novel rule -based algorithm for identification patterns, based on the identification of significant changes in short -term mean values of selected variable to detect case ID. We present our solution on the min ing use case. We compare computed results (identified patterns) with expert labels of the same dataset. Experiments show that the developed algorithm in the most of the cases correctly detects IDs in datasets with and without outliers reaching F1 score val ues: 96.8% and 97% respectively. We also evaluate our algorithm on dataset from manufacturing domain reaching value 92.6% for F1 score. Keywords: case ID, process mining, time -series data, sensor data, IoT 1. Introduction Industry 4.0 solutions like autonomous robots, the Internet of Things, or cloud computing bring new process analysis and improvement opportunities. These opportunities are related to the vast amount of various sensor data generated by machinery and devices involved in industrial process execution, which contains knowledge about process performance [1]. Using raw sensor data in process analysis is one of the most recent challenges in the Business Process Management (BPM) domain [2]. This challenge is related to the existing gap between the low grain level of sensor data and the high abstraction level of a process model [3]. Therefore, sensor data requires translation before its usage to process analytics on a higher level. The most up -to-date process analytics nowadays is process mining (PM). PM enables automated process model discovery, conformance checking, as well as process performance analysis based on event data. The event data for PM are typically structured in the ev ent log format, which in its basic form contains the following attributes: case ID , activity (event) name,

[Página 2]
2 and timestamp . The presence of a case ID is one of the essential requirements for an event log, next to the activity name executed within the process [4]. Considering the sensor data, these two essential event log elements are often not straightforwardly available in raw data. Thus, they need to be defined based on supervised or unsupervised techniques, taking into consideration the specificity of the proces s domain. Our work focuses on case ID detection, known as the event correlation task [5]. Event correlation aims at associating event data extracted from data sources to cases of a business process [6]. This task is often subjective and primarily affected by domain knowledge [7]. There are many approaches to event correlation described in literature (discussed in more detail in Section 3); however, most of them assume that defined events exist in data. Unfortunately, in the case of raw industrial sensor data, only basic sensor read ings are available, making case ID detection a challenging and complex task. Our main contribution in this paper is a development of a case ID detection algorithm based on time -series patterns in sensor data. Our work was motivated by an industrial use case from the mining domain, namely the longwall shearer operation process, but the proposed method can be extended to all cases when process is running in a cyclic manner without clearly noticed start and end of the case. The paper is structured as follows. Section 2 describes our use case and hitherto basic heuristic for case ID detection. Section 3 presents related work to the event correlation task. Section 4 contains details of our algorithm. Section 5 presents the resu lts of the experiments. Section 6 contains evaluation of our approach. Section 7 concludes the paper and highlights future work. 2. The mining use case Longwall mining is one of the most popular mining methods in hard coal mines. In longwall mining the coal cutting occurs at the longwall face, where the mining process is executed by a particular set of machinery, including a longwall shearer, an armoured face conveyor, mechanised roof supports, and a chain conveyor with a crusher (beam stage loader). The main process execution relies on longwall shearer operations; it moves from the beginning of the longwall face to the end of the longwall face in a cycle consisting of 16 specific technological stages (Fig.1): – Cutting operations at the beginning of the longwall (marked as 1,5,15), in the middle of the longwall (6,14), and at the end of the longwall (7,9,13), – Returns to the drives (3,11), – Stoppages at the beginning of the longwall (2,4,16) and at the end of the longwall (8,10,12). From the mining process analysis point of view, the presented shearer cycle is a natural candidate as an identifier of process execution traces (shearer cycles are sequential).

[Página 3]
3 Fig.1 : Longwall shearer cycle. Source [8] The operations of the shearer are monitored by sensors installed on machinery and in the excavation. The main attributes collected by the monitoring system include, among others, currents on drums (right - DR, left - DL), currents on haulages (right - HR, left - HL), movement direction (MD), shearer speed, and location. Table 1 presents an example of collected data. Table 1: Exemplary sensor data DR DL HR HL MD right MD left Location Speed Timestamp [A] [A] [A] [A] [0/1] [0/1] [m] [m/s] One can notice that sensor data consists of mixed time -series data (binary and continuous) in a form unsuitable for process analysis with existing PM techniques. A cycle identifier is also absent in the raw data, making the PM analysis impossible. In order to use sensor data for process mining, firstly, we have to preprocess our data to detect case ID (cycle ID) and subsequently transform raw sensor data into the higher -level activities (technological stages). What is worth emphasising is that in our use case, cycle ID is not only important for PM but has crucial meaning for event abstraction. Without cycle ID, we cannot label low -level sensor data with rules describing technological stages. Therefore, we have a situation that is opposite to the most typical one, i.e., when we use set of events to correlate with known case ID. The mentioned circumstances make the task of cycle detection both difficult and interesting.

[Página 4]
4 The first attempt to deal with cycle detection was the heuristic approach presented in [9]. Authors developed heuristics based on the longwall face length and distance range from the longwall’s beginning and end. In most cases, the proposed heuristics corr ectly identified the cycle’s start and end. However, in the case of severe data quality issues (e.g., changes in the location readings), the heuristic approach cannot detect cycles properly. That fact motivates us to develop an algorithm capable of dealing with the described issue. 3. Related work Widely used methods related to event correlation issues can be classified into four categories [6,10]: (1) without any additional input, using only event names, (2) based on a process model, also using timestamps of events, (3) based on event similarity or case identifier in the log and (4) and relying on correlation conditions, using data attributes. We analysed them in the context of using raw sensor data instead of well -structured event logs with event names, timestamps, and other attributes. In the first group, developed methods, e.g., presented in [11,12], assume the existence of event names in the event log. Thus, their usage is not possible with sensor data. Also, proposals described in [13,14] or [15,16] using process models to correlate e vents to sensor data are illusive if we do not have low -grained process model or adequate sensor -model mapping and unfortunately, this is the most frequent situation during work with sensor data. Methods from the third category, assuming hidden case identifiers in the log, could be applicable to sensor data; however, their assumptions in real -life use cases very often are not fulfilled; besides, hidden case ID in data, activities names [17] or addi tional attributes [18] are not available. Also, Rule -Based Event Correlation using event similarity [19] also requires defined events and additional event attributes. The last category of developed methods relies on correlation conditions using data attributes. Developed methods in this scope, i.e., [20 –23] also assume an existence of higher level activities. Thus, their usage for sensor data is limited. The contemporary methods for inferring missing entity identifiers, particularly concerning physical object movement within processes, employs Event Knowledge Graphs (EKG) [24]. Nevertheless, an underlying assumption within this approach is the prerequisite existence of activity names as input. Other approach for discrete event data in the maintenance domain, presented in [25] starts from single events and a set of events is clustered in different cases using heuristic created with domain experts and metrics enabling event labeling. Upon reviewing the literature on event correlation within the process mining domain, it becomes evident that only a limited number of solutions facilitate case ID inference based on raw sensor data. This challenge is particularly pronounced within smart sp ace domains such as homes, offices, and factories, as well as within activity recognition contexts [26]. In these domains, identifying individuals associated with activities and selecting relevant case notions can be challenging due to the absence of proce ss-oriented segmentation in sensor logs. As outlined in the referenced review [26], the primary method employed to identify case IDs in

[Página 5]
5 smart space domains is time -based, utilising specific temporal markers within the data (e.g., midnight) or activities (e.g., "sleep") to partition the log into segmented traces. While this approach aligns well with research focused on Activities of Daily L iving (ADL), it proves less suitable for industrial processes, which typically operate predominantly during daylight hours or across various working shifts. Another crucial disparity between ADL cases and industrial processes lies in the latter’s utilisati on of mixed data types (binary, continuous), rendering precise case ID identification a more demanding task. The most present, consistent framework proposal for the domain -driven utilisation of sensor data in process mining is presented in [27]. The authors use an example of the beverage manufacturing process. For the case ID identification, authors propose looki ng for distinct characteristics in the machine data (like machine status, sequences of machine states or other attributes). The proposed algorithm uses activity groups for case ID inheritance. Thus, case ID identification requires activities to be known fi rst, which is not available for many industrial processes (also for our mining use case). To the best of our knowledge, only one example of case ID identification described in the literature does not require knowledge about process models or higher -level activities to label case ID in sensor data. The heuristic approach presented in [9] uses a selected variable – the location of the machine – in the form of a time series to detect unknown cycles in the cyclic process of the mining shearer operation. The increasing popularity of PM in the industry and the lack of solutions for case ID identification require designing and implementation of new algorithms. Therefore, our goal is to develop an approach for case ID identification based on time -series patte rns in sensor data, not requiring higher -level activities. In the next section, we describe the mining use case, which has motivated us to undertake research on this topic. 4. Our proposal One of the possible approaches for cycle ID identification is to employ algorithms based on the analysis of short -term properties of analysed time series [28,29]. A pattern can be viewed as a sequence of segments (events and sample values) of different properties identified from analysed time series data. Catching dependencies between segments can be based on observations of typical (theoretical) patterns observed i n real data, identified in an expert way. Based on such assumptions, we propose a rule -based algorithm dedicated to the detection of pre -defined patterns. In the proposed approach, we assume that a pattern consists of the following sections: – S1 – a local minimum (including neighbourhood) which can be viewed as the beginning of a sequence, – S2 – a segment described by a significant change of the short -term average value of a series, of a fixed length; – S3 – a short segment that represents a rapid change of a series value (including neighbourhood).

[Página 6]
6 Thus, we mapped the above assumptions describing a pattern into an algorithm (see Algorithm 1). To this aim, we used parameters for describing a shape of searched pattern(s) from analyzed series Y . Yth denotes a change in short -term statistical parameters of the series to be considered by the algorithm as a significant change, i.e. a part (component) of a pattern. Lwz denotes current length of sections (length of a pattern) while Lwz th describes minimum length of sections, i.e. minimum number of samples considered as a pattern (small patterns are omitted). We also used Ym th describing the neighbourhood of a local minimum value of timeseries (close to 0). In a cycle ID detection, we assumed a use of a loca tion variable describing the cyclic movement of the longwall shearer. Algorithm 1 Pattern (cycle) detection 1: Read datataset (time series Y ) of the length L 2: Set/calculate the minimum length of a pattern as Lwz th. 3: Set/calculate the minimum height of a pattern Yth. 4: for t = 1 to L do 5: Calculate the short -term data sample mean value Ymsh – for the first pattern calculated within time interval started from 1 to t – for consecutive patterns - started for time tp after the end of detected previous pattern: from tp to t 6: IF Lwz (a current length of sections) > Lwz th (a fixed minimum length of sections) AND 7: IF Ymsh (a short -term mean value) > Yth (a threshold mean value) AND 8: IF a decrease in the mean value for further samples (time samples > t) is identified 9: is THAN a pattern is recognised for time t (the last sample of this pattern is for time t) 10: end for We identified two significant parameters for the described algorithm: Yth and Lwz th. A number of calculations were carried out, including setting parameters related to the statistical properties of original input data and one -sample increments. To achieve high accuracy, we also tested parameter values fixed arbitrarily. In effect, for th e original dataset, Yth was fixed to a value of 10.3 and Lwz th was fixed to a value of 100 in arbitrary/expert way. Developed algorithm structure is simple; however presents relatively high accuracy in cyclic pattern detection. The following section describes the algorithm’s operation on a real datasets.

[Página 7]
7 5. Experiments and Results Our mining dataset containing sensor readings without missing data (dataset called original data). In this case we used shearer location variable as input for cycle detection. In the original data, we observed high values of location (above 650m), which ar e obvious errors in data (in the longwall mining, the typical length of the longwall face does not exceed 300m). Thus, we removed the outliers, limiting the shearer location to 300m (dataset called as cleaned data). We ran the developed algorithm (implemented in MATLAB environment) on the original and cleaned datasets. Results for original data are presented in Fig.2 while results for cleaned data are illustrated in Fig.3. Fig.2: Results obtained for original data. (Remark: to distinguish subsequent patterns, different colours were used) Fig.3 : Results obtained for cleaned data. As shown in Fig.2 and Fig.3, the algorithm can identify patterns in data. From the original data (containing 352668 samples of one second readings), we detected 93 patterns (shearers cycles), while in the cleaned data, the number of detected patterns is eq ual to 62. In Fig.2, we can observe that abnormal data values influence the efficiency of pattern detection. Untypical (in fact unreal) abrupt data changes affect short -term average values, thus a presence of

[Página 8]
8 additional patterns. It means that, on the one hand, the proposed algorithm is suitable for cycle ID detection; on the other hand, it is sensitive to abrupt changes in data (of high amplitude), which affects the change of short -term statistical properties of the data. 6. Evaluation To evaluate the proposed algorithm, we conducted two fold experiments: 1. expert -based evaluation, based on labeled data provided by the domain expert, 2. domain -agnostic evaluation, based on dataset from manufacturing domain. In both experiments for evaluation we used the F1 score [3]. First, we asked the domain expert to indicate the beginning and end of the cycle based on the process knowledge, taking into account separated labels for data outliers. In the analysed data set, expert indicated 56 shearer cycles and 33 labels for outlier data (89 cycles in total). Subsequently, we compared discovered patterns with labels given by the domain expert and created a confusion matrix. The comparison visualisation in the form of a heatmap is presented in Fig.4. Fig.4 : Comparison between expert labels (cycle_EX) and discovered patterns (cycle_TS) for original data The heatmap shows the frequency of covering each pattern with expert labels. One can observe that discovered patterns cover expert labels quite well (with some exceptions related to abnormal data, which can be seen at the beginning (first 17 cycles), cycle 48, and cycles above 62).

[Página 9]
9 In domain -agnostic evaluation, we used dataset from the CNC machine tools 1. Originally, the mentioned dataset was used for energy prediction in the process [30]. The dataset comprises information about various tools (i.e., drills, mills, reamer) used to create a part (from aluminium alloy). We used this example because the proce ss has a cyclic character denoted with a clear reading of energy consumption (given as time series - we focus on Power7), and data are labeled with tool ID (we chose SelectedTool), making a clear distinction of process instances. For CNC dataset, Yth was fixed to a value of 0.7 while Lwz th was fixed to a value of 100. The obtained results for cycle detection from CNC dataset are presented in Fig. 5. Fig.5 : Results obtained for CNC dataset In the next step, we calculated precision and recall, as proposed in [25], as well as F1 score assuming as follows: – True Positive (TP) – the number of samples in which the predicted CaseID match the distinct label indicated by domain expert (or selected variable); – False Positive (FP) – the number of samples in which the predicted CaseID does not match the distinct label indicated by domain expert (or selected variable) because the samples belong to another case(s), denoting label mismatch; – False Negative (FN) – the number of samples in which the CaseID predicted can not be matched to any label, denoting unnecessary labels. Evaluation results are presented in Table 2. Table 2 : Evaluation metrics based on confusion matrix for datasets Dataset Precision Recall F1 score Shearer - Original 97.7% 96% 96.8% Shearer - Cleaned 97.7% 96.2% 97% CNC 89.3% 96.1% 92.6% 1 doi: 10.17632/7cghj7fffp.1

[Página 10]
10 The presented results show the high accuracy of the developed algorithm in discovering patterns consistent with the expert labels. We repeated the evaluation procedure for cleaned data (without outlier values). Evaluation metrics for cleaned dataset are pr esented in Table 2. Not high differences between measures between the original and cleaned datasets result from a relatively small number of outliers indicated in the original dataset (10 591). In the comparison to the heuristic approach presented in [9] f or original data set we obtained improvement of precision (2% percentage points), recall (17.7% pts) and F1 score (10.8% pts) and for cleaned dataset 2.2% pts, 17.7% pts and 11% pts respectively. Evaluation results obtained for CNC dataset show that proposed approach can be also applied in caseID detection for cyclic processes in other domains.2 7. Conclusions and future work In this paper, we present a novel algorithm for case ID identification that is useful for process mining based on sensor data without a registered case ID. The motivation for our work was lack of reliable method for case ID identification when only raw sen sor data is available in the dataset. Our algorithm is based on time -series analysis techniques to detect characteristic patterns in sensor data, enabling case ID detection. We ran our experiments on two datasets from a mining use case containing the location data of the longwall shearer. The first dataset contained errors (outliers) in sensor readings, and the second one contained filtered values of the location variable. Despite its simplicity, the algorithm effectively detected cycles in both original and cleaned data. We also applied our al gorithm on CNC dataset, which confirmed its high efficiency on time -series data from other domain. Although the developed algorithm efficiently recognises patterns in data, it is sensitive to abrupt changes in variable values. We analysed different sets of algorithm parameters related to the statistical properties of input time series and one -sample inc rements. However, valuable results were calculated for parameters fixed by an expert. So, the main parameters are determined arbitrarily. Therefore, further works will focus on an adaptive version of the algorithm, with parameters self -adjusting to the cur rent properties of the analysed series (both statistical and frequency). We are convinced that the presented algorithm is usable for other IoT use cases in which case ID is related to repetitive behaviour recorded in sensor data (e.g., cyclic movement of machines or personnel in a warehouse or production hall). References 1. Seiger, R., Franceschetti, M., Weber, B.: An interactive method for detection of process activity executions from iot data. Future Internet 15(2) (2023) 2 Resources related to evaluation based on CNC dataset are provided here: https://dysk.agh.edu.pl/s/LPTsc3EYn8oGnyP

[Página 11]
11 2. Janiesch, C., Koschmider, A., Mecella, M., Weber, B., Burattin, A., Di Ciccio, C., Fortino, G., Gal, A., Kannengiesser, U., Leotta, F., Mannhardt, F., Marrella, A., Mendling, J., Oberweis, A., Reichert, M., Rinderle -Ma, S., Serral, E., Song, W., Su, J., Torres, V., Weidlich, M., Weske, M., Zhang, L.: The internet of things meets business process management: A manifesto. IEEE Systems, Man, and Cybernetics Magazine 6(4) (2020) 34 –44 3. Janssen, D., Mannhardt, F., Koschmider, A., van Zelst, S.J.: Process model discovery from sensor event data. In Leemans, S., Leopold, H., eds.: Process Mining Workshops, Cham, Springer International Publishing (2021) 69 –81 4. Weerdt, J.D., Wynn, M.T.: Foundations of process event data. In van der Aalst, W.M.P., Carmona, J., eds.: Process Mining Handbook. Volume 448 of Lecture Notes in Business Information Processing. Springer (2022) 193 –211 5. Van Der Aalst, W.: Process Mining. Springer Berlin Heidelberg, Berlin, Heidelberg (2016) 6. Diba, K., Batoulis, K., Weidlich, M., Weske, M.: Extraction, correlation, and abstraction of event data for process mining. WIREs Data Mining Knowl. Discov. 10(3) (2020) 7. Helal, I.M., Awad, A.: Online correlation for unlabeled process events: A flexible cep - based approach. Information Systems 108 (2022) 102031 8. Szpyrka, M., Brzychczy, E., Napieraj, A., Korski, J., Nalepa, G.: Conformance checking of a longwall shearer operation based on low -level events. Energies 13(24) (2020) 9. Brzychczy, E., Trzcionkowska, A.: Creation of an event log from a low -level machinery monitoring system for process mining purposes. In Yin, H., Camacho, D., Novais, P., Tallón -Ballesteros, A.J., eds.: Intelligent Data Engineering and Automated Learning - IDEAL 2018 - 19th International Conference, Madrid, Spain, November 21 -23, 2018, Proceedings, Part II. Volume 11315 of Lecture Notes in Computer Science., Springer (2018) 54 –63 10. Bayomie, D., Di Ciccio, C., Mendling, J.: Event -case correlation for process mining using probabilistic optimization. Inf. Syst. 114(C) (mar 2023) 11. Walicki, M., Ferreira, D.R.: Sequence partitioning for process mining with unlabeled event logs. Data Knowledge Engineering 70(10) (2011) 821 –841 12. Pourmirza, S., Dijkman, R., Grefen, P.: Correlation mining: Mining process orchestrations without case identifiers. In Barros, A., Grigori, D., Narendra, N.C., Dam, H.K., eds.: Service -Oriented Computing, Berlin, Heidelberg, Springer Berlin Heidelberg (201 5) 237 –252 13. Bayomie, D., Helal, I.M.A., Awad, A., Ezat, E., ElBastawissi, A.: Deducing case ids for unlabeled event logs. In Reichert, M., Reijers, H.A., eds.: Business Process 14. Management Workshops, Cham, Springer International Publishing (2016) 242 –254 15. Bayomie, D., Awad, A., Ezat, E.: Correlating unlabeled events from cyclic business processes execution. In Nurcan, S., Soffer, P., Bajec, M., Eder, J., eds.: Advanced

[Página 12]
12 Information Systems Engineering, Cham, Springer International Publishing (2016) 274–289 16. Weidlich, M., Mendling, J., Weske, M.: Efficient consistency measurement based on behavioral profiles of process models. IEEE Transactions on Software Engineering 37(3) (2011) 410 –429 17. Mannhardt, F., de Leoni, M., Reijers, H.A.: Extending process logs with events from supplementary sources. In Fournier, F., Mendling, J., eds.: Business Process Management Workshops, Cham, Springer International Publishing (2015) 235 –247 18. Abbad Andaloussi, A., Burattin, A., Weber, B.: Toward an automated labeling of event log attributes. In Gulden, J., Reinhartz -Berger, I., Schmidt, R., Guerreiro, S., Guédria, W., Bera, P., eds.: Enterprise, Business -Process and Information Systems Modeling , Cham, Springer International Publishing (2018) 82 –96 19. Burattin, A., Vigo, R.: A framework for semi -automated process instance discovery from decorative attributes. In: 2011 IEEE Symposium on Computational Intelligence and Data Mining (CIDM). (2011) 176 –183 20. Djedović, A., Karabegović, A., Žunić, E., Alić, D.: A rule based events correlation algorithm for process mining. In Avdaković, S., Mujčić, A., Mujezinović, A., Uzunović, T., Volić, I., eds.: Advanced Technologies, Systems, and Applications IV -Proceedings of the International Symposium on Innovative and Interdisciplinary Applications of Advanced Technologies (IAT 2019), Cham, Springer International Publishing (2020) 587–605 21. Nezhad, H.R.M., Saint -Paul, R., Casati, F., Benatallah, B.: Event correlation for process discovery from web service interaction logs. VLDB J. 20(3) (2011) 417 –444 22. Rozsnyai, S., Slominski, A., Lakshmanan, G.T.: Discovering event correlation rules for semi -structured business processes. In: Proceedings of the 5th ACM International Conference on Distributed Event -Based System. DEBS ’11, New York, NY, USA, Association f or Computing Machinery (2011) 75 –86 23. Reguieg, H., Benatallah, B., Nezhad, H., Toumani, F.: Event correlation analytics: Scaling process mining using mapreduce -aware event correlation discovery techniques. IEEE Transactions on Services Computing 8(06) (nov 2015) 847 –860 24. Tajima, K., Du, B., Narusue, Y ., Saito, S., Iimura, Y., Morikawa, H.: Step -by-step case id identification based on activity connection for cross -organizational process mining. IEEE Access 11 (2023) 60578 –60589 25. Swevels, A., Dijkman, R., Fahland, D.: Inferring missing entity identifiers from context using event knowledge graphs. In Di Francescomarino, C., Burattin, A., Janiesch, C., Sadiq, S., eds.: Business Process Management, Cham, Springer Nature Switzerland (2023) 180 –197 26. De Fazio, R., Balzanella, A., Marrone, S., Marulli, F., Verde, L., Reccia, V., Valletta, P.: Caseid detection for process mining: A heuristic -based methodology. In De Smedt, J.,

[Página 13]
13 Soffer, P., eds.: Process Mining Workshops, Cham, Springer Nature Switzerland (2024) 45–57 27. Bertrand, Y., Van den Abbeele, B., Veneruso, S., Leotta, F., Mecella, M., Serral, E.: A survey on the application of process discovery techniques to smart spaces data. Engineering Applications of Artificial Intelligence 126 (2023) 106748 28. Brock, J., Rempe, N., von Enzberg, S., Kühn, A., Dumitrescu, R.: A framework for the domain -driven utilization of manufacturing sensor data in process mining: An action design approach. ESSN: 2701 -6277 (2023) 771 –781 29. Shen, J., Shafiq, M.O.: Short -term stock market price trend prediction using a comprehensive deep learning system. Journal of Big Data 7(1) (Aug 2020) 66 30. Brzoza -Woch, R., Pełech -Pilichowski, T., Rudnicka, A., Dajda, J., Adamiec, E., Jarosz - Krzemińska, E., Kisiel -Dorohinicki, M.: Acquisition, storing, and processing system for interdisciplinary research in earth sciences. In Groen, D., de Mulatier, C., Paszy nski, M., Krzhizhanovskaya, V .V ., Dongarra, J.J., Sloot, P.M.A., eds.: Computational Science – ICCS 2022, Cham, Springer International Publishing (2022) 422 –435 31. Brillinger, M., Wuwer, M., Abdul Hadi, M., Haas, F.: Energy prediction for cnc machining with machine learning. CIRP Journal of Manufacturing Science and Technology 35 (2021) 715 –723